<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aPaaS on 老东叔写代码</title>
    <link>https://meepoljd.github.io/tags/apaas/</link>
    <description>Recent content in aPaaS on 老东叔写代码</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 Mar 2024 19:11:14 +0800</lastBuildDate><atom:link href="https://meepoljd.github.io/tags/apaas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于aPaaS平台的思考</title>
      <link>https://meepoljd.github.io/posts/what-is-apaas/</link>
      <pubDate>Wed, 20 Mar 2024 19:11:14 +0800</pubDate>
      
      <guid>https://meepoljd.github.io/posts/what-is-apaas/</guid>
      <description>什么是Builder Builder scope划分我的认知里，是从前端视角产生的，基于组件编辑产生DSL，并且解析DSL产出页面。
从一个更中立的视角来看，其实这是两件事，IDE与运行容器。而这两者之间，隐含了一个不被重视的服务端工作，就是DSL的持久化与维护。
产品演进  前身是kunlun 我们是服务B端的，少数大客户的边缘Case也是要处理的，或者说很重要 我们曾经在两个路径里摇摆，服务字节还是搞好商业化 这一年的主题，删繁就简 支持了电商，但又抛弃了电商 6月接客  前端演进   1.0 2.0 3.0
  没法纠结技术细节，前端内容不是很懂，投入研究的ROI太低了。
  技术现状  由于之前一直没有服务端团队，所以所有的资料都是从前端视角来做的。尽快完成一份服务端的梳理与规划文档十分关键
 设计态  核心问题，一个页面有哪些信息来描述，保存在哪里
从PageConfig的存在，可以初步总结Builder的服务端在这里有两个核心职责：
  数据的持久化，未来的协同编辑，增量存储等
  IDE的体验支持（既然叫IDE，有什么是本地解决不了的，我在把自己越做越薄？）
   基于现有的资料：
页面=基本信息+UIDL+Page Config
  基本信息：页面的标题描述等
  UIDL：对页面内容的定义
  Page Config：服务端需要感知的内容，导航信息，权限树，多语言，环境变量等。
  我的问题：
  这个划分逻辑是否合理，Page Config看起来更像是Index，用来辅助IDE运行提示。是否应该影响页面本身的定义与组织
  写入时机是否合理，page config的实时性要求是什么样的。检索UIDL生产page config保存的设计是否合理。
  如果UIDL只能全量保存，就不应当支持并发编辑。进一步的page config的开发辅助功能可以本地进行。为什么要向服务端投递。</description>
    </item>
    
  </channel>
</rss>
