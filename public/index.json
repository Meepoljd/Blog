[{"content":"问题 某同学在日常工作中写出了一段十分诡异的代码，在CR中产生的激烈讨论。\nvar a = map[string]string{} func main() { go func() { v := a[\u0026#34;key1\u0026#34;] log.Println(v) }() go func() { b := make(map[string]string) a = b }() } 显然，在工作中写出这种有明显争议的代码是十分不好的，但如何证明这段代码确实不会panic也确实是个问题。\n思路 与其研究各种语法特性，不如借机研究一下Go的汇编，通过更底层的行为描述确认运行时的行为。\n验证 main.main STEXT size=80 args=0x0 locals=0x18 funcid=0x0 align=0x0 0x0000 00000 (main.go:5) TEXT main.main(SB), ABIInternal, $32-0 0x0000 00000 (main.go:5) MOVD 16(g), R16 0x0004 00004 (main.go:5) PCDATA $0, $-2 0x0004 00004 (main.go:5) CMP R16, RSP 0x0008 00008 (main.go:5) BLS 60 0x000c 00012 (main.go:5) PCDATA $0, $-1 0x000c 00012 (main.go:5) MOVD.W R30, -32(RSP) 0x0010 00016 (main.go:5) MOVD R29, -8(RSP) 0x0014 00020 (main.go:5) SUB $8, RSP, R29 0x0018 00024 (main.go:5) FUNCDATA $0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:5) FUNCDATA $1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:6) MOVD $main.main.func1·f(SB), R0 0x0020 00032 (main.go:6) PCDATA $1, $0 0x0020 00032 (main.go:6) CALL runtime.newproc(SB) 0x0024 00036 (main.go:10) MOVD $main.main.func2·f(SB), R0 0x002c 00044 (main.go:10) CALL runtime.newproc(SB) 0x0030 00048 (main.go:14) LDP -8(RSP), (R29, R30) 0x0034 00052 (main.go:14) ADD $32, RSP 0x0038 00056 (main.go:14) RET (R30) 0x003c 00060 (main.go:14) NOP 0x003c 00060 (main.go:5) PCDATA $1, $-1 0x003c 00060 (main.go:5) PCDATA $0, $-2 0x003c 00060 (main.go:5) MOVD R30, R3 0x0040 00064 (main.go:5) CALL runtime.morestack_noctxt(SB) 0x0044 00068 (main.go:5) PCDATA $0, $-1 0x0044 00068 (main.go:5) JMP 0 0x0000 90 0b 40 f9 ff 63 30 eb a9 01 00 54 fe 0f 1e f8 ..@..c0....T.... 0x0010 fd 83 1f f8 fd 23 00 d1 00 00 00 90 00 00 00 91 .....#.......... 0x0020 00 00 00 94 00 00 00 90 00 00 00 91 00 00 00 94 ................ 0x0030 fd fb 7f a9 ff 83 00 91 c0 03 5f d6 e3 03 1e aa .........._..... 0x0040 00 00 00 94 ef ff ff 17 00 00 00 00 00 00 00 00 ................ rel 24+8 t=3 main.main.func1·f+0 rel 32+4 t=9 runtime.newproc+0 rel 36+8 t=3 main.main.func2·f+0 rel 44+4 t=9 runtime.newproc+0 rel 64+4 t=9 runtime.morestack_noctxt+0 main.main.func1 STEXT size=80 args=0x0 locals=0x28 funcid=0x0 align=0x0 0x0000 00000 (main.go:6) TEXT main.main.func1(SB), ABIInternal, $48-0 0x0000 00000 (main.go:6) MOVD 16(g), R16 0x0004 00004 (main.go:6) PCDATA $0, $-2 0x0004 00004 (main.go:6) CMP R16, RSP 0x0008 00008 (main.go:6) BLS 68 0x000c 00012 (main.go:6) PCDATA $0, $-1 0x000c 00012 (main.go:6) MOVD.W R30, -48(RSP) 0x0010 00016 (main.go:6) MOVD R29, -8(RSP) 0x0014 00020 (main.go:6) SUB $8, RSP, R29 0x0018 00024 (main.go:6) FUNCDATA $0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:6) FUNCDATA $1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:6) PCDATA $0, $-3 0x0018 00024 (main.go:7) MOVD main.a(SB), R1 0x0020 00032 (main.go:7) PCDATA $0, $-1 0x0020 00032 (main.go:7) MOVD $type:map[string]string(SB), R0 0x0028 00040 (main.go:7) MOVD $go:string.\u0026#34;key1\u0026#34;(SB), R2 0x0030 00048 (main.go:7) MOVD $4, R3 0x0034 00052 (main.go:7) PCDATA $1, $0 0x0034 00052 (main.go:7) CALL runtime.mapaccess1_faststr(SB) 0x0038 00056 (main.go:8) LDP -8(RSP), (R29, R30) 0x003c 00060 (main.go:8) ADD $48, RSP 0x0040 00064 (main.go:8) RET (R30) 0x0044 00068 (main.go:8) NOP 0x0044 00068 (main.go:6) PCDATA $1, $-1 0x0044 00068 (main.go:6) PCDATA $0, $-2 0x0044 00068 (main.go:6) MOVD R30, R3 0x0048 00072 (main.go:6) CALL runtime.morestack_noctxt(SB) 0x004c 00076 (main.go:6) PCDATA $0, $-1 0x004c 00076 (main.go:6) JMP 0 0x0000 90 0b 40 f9 ff 63 30 eb e9 01 00 54 fe 0f 1d f8 ..@..c0....T.... 0x0010 fd 83 1f f8 fd 23 00 d1 1b 00 00 90 61 03 40 f9 .....#......a.@. 0x0020 00 00 00 90 00 00 00 91 02 00 00 90 42 00 00 91 ............B... 0x0030 e3 03 7e b2 00 00 00 94 fd fb 7f a9 ff c3 00 91 ..~............. 0x0040 c0 03 5f d6 e3 03 1e aa 00 00 00 94 ed ff ff 17 .._............. rel 24+8 t=41 main.a+0 rel 32+8 t=3 type:map[string]string+0 rel 40+8 t=3 go:string.\u0026#34;key1\u0026#34;+0 rel 52+4 t=9 runtime.mapaccess1_faststr+0 rel 72+4 t=9 runtime.morestack_noctxt+0 main.main.func2 STEXT size=96 args=0x0 locals=0x8 funcid=0x0 align=0x0 0x0000 00000 (main.go:10) TEXT main.main.func2(SB), ABIInternal, $16-0 0x0000 00000 (main.go:10) MOVD 16(g), R16 0x0004 00004 (main.go:10) PCDATA $0, $-2 0x0004 00004 (main.go:10) CMP R16, RSP 0x0008 00008 (main.go:10) BLS 80 0x000c 00012 (main.go:10) PCDATA $0, $-1 0x000c 00012 (main.go:10) MOVD.W R30, -16(RSP) 0x0010 00016 (main.go:10) MOVD R29, -8(RSP) 0x0014 00020 (main.go:10) SUB $8, RSP, R29 0x0018 00024 (main.go:10) FUNCDATA $0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:10) FUNCDATA $1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:11) PCDATA $1, $0 0x0018 00024 (main.go:11) CALL runtime.makemap_small(SB) 0x001c 00028 (main.go:12) PCDATA $0, $-2 0x001c 00028 (main.go:12) MOVWU runtime.writeBarrier(SB), R1 0x0024 00036 (main.go:12) CBZW R1, 60 0x0028 00040 (main.go:12) CALL runtime.gcWriteBarrier2(SB) 0x002c 00044 (main.go:12) MOVD R0, (R25) 0x0030 00048 (main.go:12) MOVD main.a(SB), R1 0x0038 00056 (main.go:12) MOVD R1, 8(R25) 0x003c 00060 (main.go:12) MOVD R0, main.a(SB) 0x0044 00068 (main.go:13) LDP -8(RSP), (R29, R30) 0x0048 00072 (main.go:13) ADD $16, RSP 0x004c 00076 (main.go:13) RET (R30) 0x0050 00080 (main.go:13) NOP 0x0050 00080 (main.go:10) PCDATA $1, $-1 0x0050 00080 (main.go:10) PCDATA $0, $-2 0x0050 00080 (main.go:10) MOVD R30, R3 0x0054 00084 (main.go:10) CALL runtime.morestack_noctxt(SB) 0x0058 00088 (main.go:10) PCDATA $0, $-1 0x0058 00088 (main.go:10) JMP 0 0x0000 90 0b 40 f9 ff 63 30 eb 49 02 00 54 fe 0f 1f f8 ..@..c0.I..T.... 0x0010 fd 83 1f f8 fd 23 00 d1 00 00 00 94 1b 00 00 90 .....#.......... 0x0020 61 03 40 b9 c1 00 00 34 00 00 00 94 20 03 00 f9 a.@....4.... ... 0x0030 1b 00 00 90 61 03 40 f9 21 07 00 f9 1b 00 00 90 ....a.@.!....... 0x0040 60 03 00 f9 fd fb 7f a9 ff 43 00 91 c0 03 5f d6 `........C...._. 0x0050 e3 03 1e aa 00 00 00 94 ea ff ff 17 00 00 00 00 ................ rel 24+4 t=9 runtime.makemap_small+0 rel 28+8 t=40 runtime.writeBarrier+0 rel 40+4 t=9 runtime.gcWriteBarrier2+0 rel 48+8 t=41 main.a+0 rel 60+8 t=41 main.a+0 rel 84+4 t=9 runtime.morestack_noctxt+0 main.init STEXT size=96 args=0x0 locals=0x8 funcid=0x0 align=0x0 0x0000 00000 (main.go:3) TEXT main.init(SB), PKGINIT|ABIInternal, $16-0 0x0000 00000 (main.go:3) MOVD 16(g), R16 0x0004 00004 (main.go:3) PCDATA $0, $-2 0x0004 00004 (main.go:3) CMP R16, RSP 0x0008 00008 (main.go:3) BLS 80 0x000c 00012 (main.go:3) PCDATA $0, $-1 0x000c 00012 (main.go:3) MOVD.W R30, -16(RSP) 0x0010 00016 (main.go:3) MOVD R29, -8(RSP) 0x0014 00020 (main.go:3) SUB $8, RSP, R29 0x0018 00024 (main.go:3) FUNCDATA $0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:3) FUNCDATA $1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB) 0x0018 00024 (main.go:3) PCDATA $1, $0 0x0018 00024 (main.go:3) CALL runtime.makemap_small(SB) 0x001c 00028 (main.go:3) PCDATA $0, $-2 0x001c 00028 (main.go:3) MOVWU runtime.writeBarrier(SB), R1 0x0024 00036 (main.go:3) CBZW R1, 60 0x0028 00040 (main.go:3) CALL runtime.gcWriteBarrier2(SB) 0x002c 00044 (main.go:3) MOVD R0, (R25) 0x0030 00048 (main.go:3) MOVD main.a(SB), R1 0x0038 00056 (main.go:3) MOVD R1, 8(R25) 0x003c 00060 (main.go:3) MOVD R0, main.a(SB) 0x0044 00068 (main.go:3) LDP -8(RSP), (R29, R30) 0x0048 00072 (main.go:3) ADD $16, RSP 0x004c 00076 (main.go:3) RET (R30) 0x0050 00080 (main.go:3) NOP 0x0050 00080 (main.go:3) PCDATA $1, $-1 0x0050 00080 (main.go:3) PCDATA $0, $-2 0x0050 00080 (main.go:3) MOVD R30, R3 0x0054 00084 (main.go:3) CALL runtime.morestack_noctxt(SB) 0x0058 00088 (main.go:3) PCDATA $0, $-1 0x0058 00088 (main.go:3) JMP 0 0x0000 90 0b 40 f9 ff 63 30 eb 49 02 00 54 fe 0f 1f f8 ..@..c0.I..T.... 0x0010 fd 83 1f f8 fd 23 00 d1 00 00 00 94 1b 00 00 90 .....#.......... 0x0020 61 03 40 b9 c1 00 00 34 00 00 00 94 20 03 00 f9 a.@....4.... ... 0x0030 1b 00 00 90 61 03 40 f9 21 07 00 f9 1b 00 00 90 ....a.@.!....... 0x0040 60 03 00 f9 fd fb 7f a9 ff 43 00 91 c0 03 5f d6 `........C...._. 0x0050 e3 03 1e aa 00 00 00 94 ea ff ff 17 00 00 00 00 ................ rel 24+4 t=9 runtime.makemap_small+0 rel 28+8 t=40 runtime.writeBarrier+0 rel 40+4 t=9 runtime.gcWriteBarrier2+0 rel 48+8 t=41 main.a+0 rel 60+8 t=41 main.a+0 rel 84+4 t=9 runtime.morestack_noctxt+0 go:cuinfo.producer.main SDWARFCUINFO dupok size=0 0x0000 2d 73 68 61 72 65 64 20 72 65 67 61 62 69 -shared regabi go:cuinfo.packagename.main SDWARFCUINFO dupok size=0 0x0000 6d 61 69 6e main main..inittask SNOPTRDATA size=16 0x0000 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 ................ rel 8+8 t=1 main.init+0 go:string.\u0026#34;key1\u0026#34; SRODATA dupok size=4 0x0000 6b 65 79 31 key1 main.a SBSS size=8 SDWARFVAR size=23 0x0000 0a 6d 61 69 6e 2e 61 00 09 03 00 00 00 00 00 00 .main.a......... 0x0010 00 00 00 00 00 00 01 ....... rel 10+8 t=1 main.a+0 rel 18+4 t=31 go:info.map[string]string+0 runtime.memequal64·f SRODATA dupok size=8 0x0000 00 00 00 00 00 00 00 00 ........ rel 0+8 t=1 runtime.memequal64+0 runtime.gcbits.0100000000000000 SRODATA dupok size=8 0x0000 01 00 00 00 00 00 00 00 ........ type:.namedata.*[8]uint8- SRODATA dupok size=11 0x0000 00 09 2a 5b 38 5d 75 69 6e 74 38 ..*[8]uint8 type:*[8]uint8 SRODATA dupok size=56 0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 ................ 0x0010 f8 9a 95 1a 08 08 08 36 00 00 00 00 00 00 00 00 .......6........ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 ........ rel 24+8 t=1 runtime.memequal64·f+0 rel 32+8 t=1 runtime.gcbits.0100000000000000+0 rel 40+4 t=5 type:.namedata.*[8]uint8-+0 rel 48+8 t=1 type:[8]uint8+0 runtime.gcbits. SRODATA dupok size=0 type:[8]uint8 SRODATA dupok size=72 0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0010 89 18 9c b4 0a 01 01 11 00 00 00 00 00 00 00 00 ................ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0040 08 00 00 00 00 00 00 00 ........ rel 24+8 t=1 runtime.memequal64·f+0 rel 32+8 t=1 runtime.gcbits.+0 rel 40+4 t=5 type:.namedata.*[8]uint8-+0 rel 44+4 t=-32763 type:*[8]uint8+0 rel 48+8 t=1 type:uint8+0 rel 56+8 t=1 type:[]uint8+0 type:.namedata.*[8]string- SRODATA dupok size=12 0x0000 00 0a 2a 5b 38 5d 73 74 72 69 6e 67 ..*[8]string type:*[8]string SRODATA dupok size=56 0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 ................ 0x0010 e3 bf d7 63 08 08 08 36 00 00 00 00 00 00 00 00 ...c...6........ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 ........ rel 24+8 t=1 runtime.memequal64·f+0 rel 32+8 t=1 runtime.gcbits.0100000000000000+0 rel 40+4 t=5 type:.namedata.*[8]string-+0 rel 48+8 t=1 type:noalg.[8]string+0 runtime.gcbits.5555000000000000 SRODATA dupok size=8 0x0000 55 55 00 00 00 00 00 00 UU...... type:noalg.[8]string SRODATA dupok size=72 0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00 ........x....... 0x0010 0c 1c ff 04 02 08 08 11 00 00 00 00 00 00 00 00 ................ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0040 08 00 00 00 00 00 00 00 ........ rel 32+8 t=1 runtime.gcbits.5555000000000000+0 rel 40+4 t=5 type:.namedata.*[8]string-+0 rel 44+4 t=-32763 type:*[8]string+0 rel 48+8 t=1 type:string+0 rel 56+8 t=1 type:[]string+0 type:.namedata.*map.bucket[string]string- SRODATA dupok size=27 0x0000 00 19 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 73 74 ..*map.bucket[st 0x0010 72 69 6e 67 5d 73 74 72 69 6e 67 ring]string type:*map.bucket[string]string SRODATA dupok size=56 0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 ................ 0x0010 40 92 79 ff 08 08 08 36 00 00 00 00 00 00 00 00 @.y....6........ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 ........ rel 24+8 t=1 runtime.memequal64·f+0 rel 32+8 t=1 runtime.gcbits.0100000000000000+0 rel 40+4 t=5 type:.namedata.*map.bucket[string]string-+0 rel 48+8 t=1 type:noalg.map.bucket[string]string+0 runtime.gcbits.aaaaaaaa02000000 SRODATA dupok size=8 0x0000 aa aa aa aa 02 00 00 00 ........ type:.importpath.. SRODATA dupok size=2 0x0000 00 00 .. type:.namedata.topbits- SRODATA dupok size=9 0x0000 00 07 74 6f 70 62 69 74 73 ..topbits type:.namedata.keys- SRODATA dupok size=6 0x0000 00 04 6b 65 79 73 ..keys type:.namedata.elems- SRODATA dupok size=7 0x0000 00 05 65 6c 65 6d 73 ..elems type:.namedata.overflow- SRODATA dupok size=10 0x0000 00 08 6f 76 65 72 66 6c 6f 77 ..overflow type:noalg.map.bucket[string]string SRODATA dupok size=176 0x0000 10 01 00 00 00 00 00 00 10 01 00 00 00 00 00 00 ................ 0x0010 4d c0 63 4d 02 08 08 19 00 00 00 00 00 00 00 00 M.cM............ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ................ 0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 ................ 0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0090 88 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x00a0 00 00 00 00 00 00 00 00 08 01 00 00 00 00 00 00 ................ rel 32+8 t=1 runtime.gcbits.aaaaaaaa02000000+0 rel 40+4 t=5 type:.namedata.*map.bucket[string]string-+0 rel 44+4 t=-32763 type:*map.bucket[string]string+0 rel 48+8 t=1 type:.importpath..+0 rel 56+8 t=1 type:noalg.map.bucket[string]string+80 rel 80+8 t=1 type:.namedata.topbits-+0 rel 88+8 t=1 type:[8]uint8+0 rel 104+8 t=1 type:.namedata.keys-+0 rel 112+8 t=1 type:noalg.[8]string+0 rel 128+8 t=1 type:.namedata.elems-+0 rel 136+8 t=1 type:noalg.[8]string+0 rel 152+8 t=1 type:.namedata.overflow-+0 rel 160+8 t=1 type:unsafe.Pointer+0 runtime.strhash·f SRODATA dupok size=8 0x0000 00 00 00 00 00 00 00 00 ........ rel 0+8 t=1 runtime.strhash+0 type:.namedata.*map[string]string- SRODATA dupok size=20 0x0000 00 12 2a 6d 61 70 5b 73 74 72 69 6e 67 5d 73 74 ..*map[string]st 0x0010 72 69 6e 67 ring type:*map[string]string SRODATA dupok size=56 0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 ................ 0x0010 d8 6c ad 45 08 08 08 36 00 00 00 00 00 00 00 00 .l.E...6........ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 ........ rel 24+8 t=1 runtime.memequal64·f+0 rel 32+8 t=1 runtime.gcbits.0100000000000000+0 rel 40+4 t=5 type:.namedata.*map[string]string-+0 rel 48+8 t=1 type:map[string]string+0 type:map[string]string SRODATA dupok size=88 0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00 ................ 0x0010 de 62 2b 92 02 08 08 35 00 00 00 00 00 00 00 00 .b+....5........ 0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0050 10 10 10 01 0c 00 00 00 ........ rel 32+8 t=1 runtime.gcbits.0100000000000000+0 rel 40+4 t=5 type:.namedata.*map[string]string-+0 rel 44+4 t=-32763 type:*map[string]string+0 rel 48+8 t=1 type:string+0 rel 56+8 t=1 type:string+0 rel 64+8 t=1 type:noalg.map.bucket[string]string+0 rel 72+8 t=1 runtime.strhash·f+0 main.main.func1·f SRODATA dupok size=8 0x0000 00 00 00 00 00 00 00 00 ........ rel 0+8 t=1 main.main.func1+0 main.main.func2·f SRODATA dupok size=8 0x0000 00 00 00 00 00 00 00 00 ........ rel 0+8 t=1 main.main.func2+0 gclocals·g2BeySu+wFnoycgXfElmcg== SRODATA dupok size=8 0x0000 01 00 00 00 00 00 00 00 ........ 总结 ","permalink":"https://meepoljd.github.io/posts/go-asm/","summary":"问题 某同学在日常工作中写出了一段十分诡异的代码，在CR中产生的激烈讨论。\nvar a = map[string]string{} func main() { go func() { v := a[\u0026#34;key1\u0026#34;] log.Println(v) }() go func() { b := make(map[string]string) a = b }() } 显然，在工作中写出这种有明显争议的代码是十分不好的，但如何证明这段代码确实不会panic也确实是个问题。\n思路 与其研究各种语法特性，不如借机研究一下Go的汇编，通过更底层的行为描述确认运行时的行为。\n验证 main.main STEXT size=80 args=0x0 locals=0x18 funcid=0x0 align=0x0 0x0000 00000 (main.go:5) TEXT main.main(SB), ABIInternal, $32-0 0x0000 00000 (main.go:5) MOVD 16(g), R16 0x0004 00004 (main.go:5) PCDATA $0, $-2 0x0004 00004 (main.go:5) CMP R16, RSP 0x0008 00008 (main.go:5) BLS 60 0x000c 00012 (main.","title":"尝试读懂Go ASM"},{"content":" 为了方便迁移，不被各种笔记软件绑架，所以最近将笔记内容都迁移到一个Markdown仓库进行管理。顺便的使用Hugo将这些笔记搭建一个个人博客。\n本文用于记录搭建过程中的一些操作，面向有开发基础的同学，不会再讲解什么是Git。\n环境搭建 Git 一个顺手的编辑器（为什么不试试Emacs呢） hugo 安装Hugo，Mac用户可以直接\nbrew install hugo 为了方便使用，在创建站点时加入--format yaml，来指定配置文件的格式\nhugo new site MyWebsite --format yaml Hugo 会在目录查找一个 config.toml 的配置文件。如果这个文件不存在，将会查找 config.yaml，然后是 config.json 。\n主题配置 审美问题，实在不知道选什么，所以选择了一个人气较高的主题PaperMod。参考官方文档来进行安装。\nHugo的主题被存放在 MyWebsite/themes 目录下，可使用git clone 将代码拉下来\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 在 config.yml 加入如下的内容来指定使用的主题\ntheme: [\u0026#34;PaperMod\u0026#34;] 文章模板 hugo的模板文件位于archetypes文件夹中，其中有一个default.md文件，修改内容如下\n--- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} lastmod: {{ .Date }} author: [\u0026#34;jiandong.liu93\u0026#34;] categories: - category 1 - category 2 tags: - tag 1 - tag 2 keywords: - word 1 - word 2 description: \u0026#34;\u0026#34; # 文章描述，与搜索优化相关 summary: \u0026#34;\u0026#34; # 文章简单描述，会展示在主页 weight: # 输入1可以顶置文章，用来给文章展示排序，不填就默认按时间排序 slug: \u0026#34;\u0026#34; draft: true # 是否为草稿 comments: false showToc: true # 显示目录 TocOpen: true # 自动展开目录 autonumbering: true # 目录自动编号 hidemeta: false # 是否隐藏文章的元信息，如发布日期、作者等 disableShare: true # 底部不显示分享栏 searchHidden: true # 该页面可以被搜索到 showbreadcrumbs: true #顶部显示当前路径 mermaid: true cover: image: \u0026#34;\u0026#34; caption: \u0026#34;\u0026#34; alt: \u0026#34;\u0026#34; relative: false --- 自定义 为网站进行一些个性化的配置，比如上几个要饭的二维码。可以使用主题官方提供的配置文件模板。\nbaseURL: \u0026#34;https://meepoljd.github.io/\u0026#34; title: 老东叔写代码 paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: 老东叔写代码 description: \u0026#34;埋藏无处安放的思绪\u0026#34; keywords: [Blog, Golang, Develop] author: jiandong.liu93 # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: false ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true ShowWordCount: true ShowRssButtonInSectionTermList: true ShowFullTextinRSS: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: true tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: 玄都观里花千树，尽是刘郎去后栽 socialIcons: - name: github url: \u0026#34;https://github.com/Meepoljd\u0026#34; analytics: google: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; bing: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; yandex: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: search name: Search url: /search/ weight: 10 - identifier: archives name: Archive url: /archives/ weight: 10 - identifier: tags name: Tags url: /tags/ weight: 20 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses: true markup: highlight: noClasses: false # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai 搜索功能 根据官网文档，需要插入一个页面进行配置。\n向config.yml中添加如下内容\noutputs: home: - HTML - RSS - JSON # necessary for search 之后在content中新建search.md文件，并插入如下内容\n--- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # necessary for search # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;placeholder text in search input box\u0026#34; --- 归档页 根据官方文档，向content目录下插入archives.md文件。插入内容\n--- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archives/\u0026#34; summary: archives --- 更新部署 GihubPages 在跟老婆申请换了电脑之后，就没有预算购买服务器了。因此选择将网站部署在免费的Github pages。\nGitHub Pages 是一项静态站点托管服务，它直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，（可选）通过构建过程运行文件，然后发布网站。 可以在 GitHub Pages 示例集合中看到 GitHub Pages 站点的示例。\nGithub Action 为了实现推送代码后，自动部署更新网站。参考Hugo官网推荐的方案，配置Github Action。\n在网站根目录内创建.github/workflows/hugo.yaml文件，复制如下内容。\n# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: - main # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.122.0 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v4 - name: Install Node.js dependencies run: \u0026#34;[[ -f package-lock.json || -f npm-shrinkwrap.json ]] \u0026amp;\u0026amp; npm ci || true\u0026#34; - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc \\ --minify \\ --baseURL \u0026#34;${{ steps.pages.outputs.base_url }}/\u0026#34; - name: Upload artifact uses: actions/upload-pages-artifact@v2 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v3 Finally 一个简易的个人博客就搭建完成了\n","permalink":"https://meepoljd.github.io/posts/how-to-build-personal-website/","summary":"为了方便迁移，不被各种笔记软件绑架，所以最近将笔记内容都迁移到一个Markdown仓库进行管理。顺便的使用Hugo将这些笔记搭建一个个人博客。\n本文用于记录搭建过程中的一些操作，面向有开发基础的同学，不会再讲解什么是Git。\n环境搭建 Git 一个顺手的编辑器（为什么不试试Emacs呢） hugo 安装Hugo，Mac用户可以直接\nbrew install hugo 为了方便使用，在创建站点时加入--format yaml，来指定配置文件的格式\nhugo new site MyWebsite --format yaml Hugo 会在目录查找一个 config.toml 的配置文件。如果这个文件不存在，将会查找 config.yaml，然后是 config.json 。\n主题配置 审美问题，实在不知道选什么，所以选择了一个人气较高的主题PaperMod。参考官方文档来进行安装。\nHugo的主题被存放在 MyWebsite/themes 目录下，可使用git clone 将代码拉下来\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 在 config.yml 加入如下的内容来指定使用的主题\ntheme: [\u0026#34;PaperMod\u0026#34;] 文章模板 hugo的模板文件位于archetypes文件夹中，其中有一个default.md文件，修改内容如下\n--- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} lastmod: {{ .Date }} author: [\u0026#34;jiandong.liu93\u0026#34;] categories: - category 1 - category 2 tags: - tag 1 - tag 2 keywords: - word 1 - word 2 description: \u0026#34;\u0026#34; # 文章描述，与搜索优化相关 summary: \u0026#34;\u0026#34; # 文章简单描述，会展示在主页 weight: # 输入1可以顶置文章，用来给文章展示排序，不填就默认按时间排序 slug: \u0026#34;\u0026#34; draft: true # 是否为草稿 comments: false showToc: true # 显示目录 TocOpen: true # 自动展开目录 autonumbering: true # 目录自动编号 hidemeta: false # 是否隐藏文章的元信息，如发布日期、作者等 disableShare: true # 底部不显示分享栏 searchHidden: true # 该页面可以被搜索到 showbreadcrumbs: true #顶部显示当前路径 mermaid: true cover: image: \u0026#34;\u0026#34; caption: \u0026#34;\u0026#34; alt: \u0026#34;\u0026#34; relative: false --- 自定义 为网站进行一些个性化的配置，比如上几个要饭的二维码。可以使用主题官方提供的配置文件模板。","title":"使用Hugo快速搭建一个免费的静态博客"}]